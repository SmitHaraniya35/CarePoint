@model HospitalAppointmentsSystemMVC.ViewModels.AdminDashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .hover-zoom {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .hover-zoom:hover {
            transform: scale(1.04);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
        }

    .card-gradient-primary {
        background: linear-gradient(135deg, #007bff, #3399ff);
    }

    .card-gradient-success {
        background: linear-gradient(135deg, #28a745, #5cd65c);
    }

    .card-gradient-info {
        background: linear-gradient(135deg, #17a2b8, #5bc0de);
    }

    .card-gradient-warning {
        background: linear-gradient(135deg, #ffc107, #ffdd57);
    }

    .card-gradient-danger {
        background: linear-gradient(135deg, #dc3545, #ff6b6b);
    }

    .card-gradient-secondary {
        background: linear-gradient(135deg, #6c757d, #adb5bd);
    }

    .card-title, .card-text {
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    h2, h3 {
        font-weight: 700;
    }

    hr {
        border-top: 2px solid #007bff;
        margin: 1rem auto;
    }

</style>

<h2 class="text-center text-capitalize mb-1">Welcome, Admin!</h2>
<p class="text-center mb-4 text-muted">Manage doctors, patients, and oversee all appointments from here.</p>
<hr />

<h2 class="mb-4 text-dark">Dashboard Summary</h2>

<div class="row mb-4 g-3">
    <div class="col-md-4">
        <div class="card text-white card-gradient-primary shadow-lg h-100 rounded-4 border-0 hover-zoom">
            <div class="card-body text-center">
                <i class="bi bi-person-badge display-4 mb-2"></i>
                <h5 class="card-title">Total Doctors</h5>
                <p class="card-text display-6 fw-bold">@Model.TotalDoctors</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white card-gradient-success shadow-lg h-100 rounded-4 border-0 hover-zoom">
            <div class="card-body text-center">
                <i class="bi bi-people-fill display-4 mb-2"></i>
                <h5 class="card-title">Total Patients</h5>
                <p class="card-text display-6 fw-bold">@Model.TotalPatients</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white card-gradient-info shadow-lg h-100 rounded-4 border-0 hover-zoom">
            <div class="card-body text-center">
                <i class="bi bi-calendar-check display-4 mb-2"></i>
                <h5 class="card-title">Total Appointments</h5>
                <p class="card-text display-6 fw-bold">@Model.TotalAppointments</p>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4 g-3">
    <div class="col-md-4">
        <div class="card text-white card-gradient-warning shadow-lg h-100 rounded-4 border-0 hover-zoom">
            <div class="card-body text-center">
                <i class="bi bi-clock-history display-4 mb-2"></i>
                <h5 class="card-title">Upcoming Today</h5>
                <p class="card-text display-6 fw-bold">@Model.UpcomingAppointmentsToday</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white card-gradient-danger shadow-lg h-100 rounded-4 border-0 hover-zoom">
            <div class="card-body text-center">
                <i class="bi bi-calendar-x-fill display-4 mb-2"></i>
                <h5 class="card-title">Cancelled Appointments</h5>
                <p class="card-text display-6 fw-bold">@Model.CancelledAppointments</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white card-gradient-secondary shadow-lg h-100 rounded-4 border-0 hover-zoom">
            <div class="card-body text-center">
                <i class="bi bi-chat-left-text display-4 mb-2"></i>
                <h5 class="card-title">Total Feedbacks</h5>
                <p class="card-text display-6 fw-bold">@Model.TotalFeedbacks</p>
            </div>
        </div>
    </div>
</div>

<hr />
<h3 class="mt-5 mb-4 text-dark">Statistics Overview</h3>

<div class="row mb-4 align-items-stretch">
    <div class="col-md-4">
        <div class="card h-100 shadow hover-zoom">
            <div class="card-body d-flex align-items-center justify-content-center">
                <canvas id="appointmentStatusChart" height="150"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="card h-100 shadow hover-zoom">
            <div class="card-body">
                <canvas id="monthlyAppointmentsChart" height="150"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-12">
        <div class="card shadow hover-zoom">
            <div class="card-body">
                <canvas id="appointmentsChart" height="100"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row mb-5">
    <div class="col-md-12">
        <div class="card shadow hover-zoom">
            <div class="card-body">
                <canvas id="doctorActivityChart" height="100"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const appointmentsCtx = document.getElementById('appointmentsChart').getContext('2d');
        const doctorCtx = document.getElementById('doctorActivityChart').getContext('2d');
        const statusCtx = document.getElementById('appointmentStatusChart').getContext('2d');
        const monthlyCtx = document.getElementById('monthlyAppointmentsChart').getContext('2d');

        new Chart(appointmentsCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.AppointmentsLast7Days.Select(p => p.Label))),
                datasets: [{
                    label: 'Appointments (Last 7 Days)',
                    data: @Html.Raw(Json.Serialize(Model.AppointmentsLast7Days.Select(p => p.Value))),
                    backgroundColor: 'rgba(54, 162, 235, 0.3)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    fill: true,
                    tension: 0.4
                }]
            }
        });

        new Chart(doctorCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.DoctorActivity.Select(p => p.Label))),
                datasets: [{
                    label: 'Doctor Activity (Appointments)',
                    data: @Html.Raw(Json.Serialize(Model.DoctorActivity.Select(p => p.Value))),
                    backgroundColor: 'rgba(255, 99, 132, 0.6)'
                }]
            }
        });

        new Chart(statusCtx, {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.AppointmentStatus.Keys)),
                datasets: [{
                    label: 'Appointment Status',
                    data: @Html.Raw(Json.Serialize(Model.AppointmentStatus.Values)),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)',
                        'rgba(255, 206, 86, 0.6)',
                        'rgba(75, 192, 192, 0.6)'
                    ]
                }]
            }
        });

        new Chart(monthlyCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.MonthlyAppointments.Select(p => p.Label))),
                datasets: [{
                    label: 'Appointments per Month',
                    data: @Html.Raw(Json.Serialize(Model.MonthlyAppointments.Select(p => p.Value))),
                    backgroundColor: 'rgba(153, 102, 255, 0.6)'
                }]
            }
        });
    </script>
}
